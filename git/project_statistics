#!/bin/bash

# Function to calculate the number of changed files and commits for a given directory
get_git_stats() {
  local dir=$1
  local changed_files=$(git -C "$dir" log --since="last year" --name-only --author="Ben Maes" --pretty=format: | sort -u | grep -v '^$' | wc -l)
  local commits=$(git -C "$dir" rev-list --count --since="last year" --author="Ben Maes" HEAD)
  echo "$changed_files $commits"
}

# Get a list of all directories in the current directory
directories=$(find . -maxdepth 1 -type d)

total_changed_files=0
total_commits=0

# Loop through each directory
for dir in $directories; do
  # Exclude the current directory (.) and parent directory (..)
  if [[ "$dir" != "." && "$dir" != ".." ]]; then
    # Check if the directory is a Git repository
    if [ -d "$dir/.git" ]; then
      # Get git stats for the directory
      stats=($(get_git_stats "$dir"))
      changed_files=${stats[0]}
      commits=${stats[1]}

      # Print stats for the directory
      echo "Directory: $dir"
      echo "Changed files in the last year: $changed_files"
      echo "Commits in the last year: $commits"

      # Update total counters
      total_changed_files=$((total_changed_files + changed_files))
      total_commits=$((total_commits + commits))
    fi
  fi
done

# Print total stats
echo "Total changed files in all directories: $total_changed_files"
echo "Total commits in all directories: $total_commits"
